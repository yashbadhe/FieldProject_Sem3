import json
import boto3
import os
import uuid
import random
import string

s3 = boto3.client('s3')
dynamodb = boto3.resource('dynamodb')

BUCKET_NAME = "inkly-files-inkly"
TABLE_NAME = "inkly-files"

def generate_print_code(length=6):
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=length))

def lambda_handler(event, context):
    file_key = f"{str(uuid.uuid4())}.pdf"
    print_code = generate_print_code()

    try:
        # Generate the presigned S3 URL
        url = s3.generate_presigned_url(
            ClientMethod='put_object',
            Params={
                'Bucket': BUCKET_NAME,
                'Key': file_key,
                'ContentType': 'application/pdf'
            },
            ExpiresIn=3600
        )

        # Store metadata in DynamoDB
        table = dynamodb.Table(TABLE_NAME)
        table.put_item(
            Item={
                'printCode': print_code,
                'fileKey': file_key,
                'uploaded': False  # Optional: track upload status later
            }
        )

        return {
            "statusCode": 200,
            "body": json.dumps({
                "uploadURL": url,
                "fileKey": file_key,
                "printCode": print_code
            }),
            "headers": {
                "Access-Control-Allow-Origin": "*",
                "Content-Type": "application/json"
            }
        }

    except Exception as e:
        return {
            "statusCode": 500,
            "body": json.dumps({"error": str(e)}),
            "headers": {
                "Access-Control-Allow-Origin": "*"
            }
        }
